
package com.mindfire.service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MathService", targetNamespace = "http://service.mindfire.com")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MathService {


    /**
     * 
     * @param j
     * @param i
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "addReturn", targetNamespace = "http://service.mindfire.com")
    @RequestWrapper(localName = "add", targetNamespace = "http://service.mindfire.com", className = "com.mindfire.service.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://service.mindfire.com", className = "com.mindfire.service.AddResponse")
    public int add(
        @WebParam(name = "i", targetNamespace = "http://service.mindfire.com")
        int i,
        @WebParam(name = "j", targetNamespace = "http://service.mindfire.com")
        int j);

    /**
     * 
     * @param j
     * @param i
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "substractReturn", targetNamespace = "http://service.mindfire.com")
    @RequestWrapper(localName = "substract", targetNamespace = "http://service.mindfire.com", className = "com.mindfire.service.Substract")
    @ResponseWrapper(localName = "substractResponse", targetNamespace = "http://service.mindfire.com", className = "com.mindfire.service.SubstractResponse")
    public int substract(
        @WebParam(name = "i", targetNamespace = "http://service.mindfire.com")
        int i,
        @WebParam(name = "j", targetNamespace = "http://service.mindfire.com")
        int j);

}
